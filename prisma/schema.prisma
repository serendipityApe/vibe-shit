// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id          String    @id @default(cuid())
  githubId    Int       @unique
  username    String
  avatarUrl   String?
  createdAt   DateTime  @default(now())
  projects    Project[]
  votes       Vote[]
  comments    Comment[]

  @@map("users")
}

model Project {
  id          String    @id @default(cuid())
  title       String
  tagline     String
  url         String?
  confession  String    // "忏悔录" - 为什么这个项目垃圾
  imageUrl    String?   // 保留原有字段兼容性
  logoUrl     String?   // 项目logo
  galleryUrls String?   // 项目图片库，JSON字符串数组格式
  tags        String
  failureType String?   // 失败类型
  createdAt   DateTime  @default(now())
  authorId    String
  author      User      @relation(fields: [authorId], references: [id])
  votes       Vote[]
  comments    Comment[]

  @@map("projects")
}

model Vote {
  id        String   @id @default(cuid())
  userId    String
  projectId String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  project   Project  @relation(fields: [projectId], references: [id])

  @@unique([userId, projectId])
  @@map("votes")
}

model Comment {
  id        String   @id @default(cuid())
  content   String
  userId    String
  projectId String
  parentId  String?  // 父评论ID，null表示顶级评论
  isPinned  Boolean  @default(false) // 是否置顶（创作者第一条评论）
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  project   Project  @relation(fields: [projectId], references: [id])
  parent    Comment? @relation("CommentReplies", fields: [parentId], references: [id])
  replies   Comment[] @relation("CommentReplies")

  @@map("comments")
}
